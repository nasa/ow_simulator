vertex_program ow_lander_vert glsl
{
  source ow_lander.vert

  default_params
  {
    param_named_auto worldMatrix                      world_matrix
    param_named_auto worldViewMatrix                  worldview_matrix
    param_named_auto worldViewProjMatrix              worldviewproj_matrix
    param_named_auto inverseViewMatrix                inverse_view_matrix
    param_named_auto inverseTransposeWorldMatrix      inverse_transpose_world_matrix
    param_named_auto inverseTransposeWorldViewMatrix  inverse_transpose_worldview_matrix

    // 3 for the sun because it uses PSSM, plus 2 spotlights
    param_named_auto texViewProjMatrix   texture_viewproj_matrix_array 5

    // lander lights
    param_named landerUpVec              float3 0.0 0.0 1.0
    // The 0th is the sun (directional light). The next 2 are lander lights (spotlights).
    param_named_auto wsLightPos          light_position_array 3
    param_named_auto wsLightDir          light_direction_array 3
    param_named_auto spotlightParams     spotlight_params_array 3
    // Assuming these spotlights are the same, these parameters can be reused for each.
    param_named_auto spotlightAtten0     light_attenuation 1
  }
}

fragment_program ow_lander_frag glsl
{
  source ow_lander.frag

  default_params
  {
    param_named_auto wsSunPosition             light_position 0
    // Sun irradiance at Jupiter
    param_named sunIntensity                   float3 4438.0 4438.0 4438.0
    param_named sunVisibility                  float 1.0

    // shadow mapping
    param_named shadowMap0                     int 0
    param_named shadowMap1                     int 1
    param_named shadowMap2                     int 2
    param_named shadowMap3                     int 3
    param_named shadowMap4                     int 4
    // This line is sometimes necessary, but not usually. Perhaps it is a Gazebo bug.
    param_named pssmSplitPoints                float4 6.66067 38.364 500 0

    // texture references
    param_named irradianceMap                  int 5

    // lander lights
    // Control status of lander lights (spotlights)
    param_named_auto wsLightPos                light_position_array 3
    param_named_auto wsLightDir                light_direction_array 3
    // Color is misused to turn lights on and off
    param_named_auto lightDiffuseColor         light_diffuse_colour_array 3
    // Light intensity is baked into attenuation
    param_named_auto lightAtten                light_attenuation_array 3
    param_named_auto spotlightParams           spotlight_params_array 3
    // spotlight texture
    param_named spotlightMap                   int 6
  }
}

material ow/lander
{
  technique
  {
    pass
    {
      vertex_program_ref ow_lander_vert {}
      
      fragment_program_ref ow_lander_frag {
        // material properties
        param_named_auto materialDiffuse surface_diffuse_colour
        param_named_auto materialSpecular surface_specular_colour
      }

      texture_unit shadowMap0
      {
        content_type shadow
        tex_address_mode clamp
      }
      texture_unit shadowMap1
      {
        content_type shadow
        tex_address_mode clamp
      }
      texture_unit shadowMap2
      {
        content_type shadow
        tex_address_mode clamp
      }
      texture_unit shadowMap3
      {
        content_type shadow
        tex_address_mode clamp
      }
      texture_unit shadowMap4
      {
        content_type shadow
        tex_address_mode clamp
      }

      texture_unit ow_irradiance_environment_map {}

      texture_unit spotlightMap {
        texture lander_light_beam.png 2d
        tex_address_mode clamp 
      }
    }
  }
}

