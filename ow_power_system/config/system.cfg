# Power system related configurations

# IMPORTANT: If disabled, the power system will not run predictions or
# use GSAP. All power publications will remain static.  This maximizes
# performance for those not looking for power predictions, but the
# power system will not react to anything as a result.
#
enable_power_system: true

# configuration
efficiency: 0.9			            # a value 0 - 1


# Initial battery configuration

initial_power: 0.0			        # watts
initial_voltage: 25.2			      # volts
initial_temperature: 20.0   		# deg. C

initial_soc: 0.95           		# % (used for first placeholder publication)

# voltage
base_voltage: 16.8			        # volts
voltage_range: 0.1			        # volts

# Power values (wattage). These estimated values are per cell. Some
# are based on a Europa Lander draft specification, others on sample
# values from other planetary rovers, and some are just guesses.

# Baseline values (watts) for constant power draws.
baseline_power_computing: 0.1
baseline_power_heating: 1.2
baseline_power_science_instr: 0.6
baseline_power_sample_handling: 0.6
baseline_power_other: 2.2


# Power coefficients for dynamically computed power draw.
power_lights_coefficient: 0.3       # power draw (W) per light at max intensity
power_camera_controller: 1.0        # power draw of the camera controller
power_camera_exposed_coefficient: 2.0  # power draw while a camera is exposing

# temperature
min_temperature: 17.5			      # deg. C
max_temperature: 21.5			      # deg. C

# Estimate of battery lifetime
battery_lifetime: 27380.0		    # s


# IMPORTANT: This value governs the number of GSAP prognosers
# initialized by the power system to get predictions. 4
# is the maximum amount and provides a full battery
# simulation, but the additional load imposed by each
# additional prognoser is too large to run by default.
# As such, the default is 1 prognoser (which represents
# a sample of the full battery), but most intra-battery
# faults are not possible to simulate with only 1 active model.
# At least 2 are required to run at once to allow for intra-
# battery fault modeling on 1 model.
# Predictions may also be less accurate with less models to
# compare, though overall power behavior should not change.
active_models: 1

# The frequency of the main loop in the power system.
# Dictates the time interval between publications
# & the size of the mechanical power moving average window.
loop_rate: 1				            # hz

# Number of threads to use for the asynchronous ROS spinning in the main
# power system loop (to allow the joint states callback function to run
# at the same 50Hz publication rate, rather than the loop's rate).
spinner_threads: 4


# GSAP (prognostics engine) related configurations

# The maximum RUL estimation output from the Monte Carlo prediction process.
# If the prediction hits this value, it stops immediately and returns infinity
# (which is processed later into the max value instead).
# Lower values mean faster prediction returns in the event GSAP is predicting
# beyond this value, but it also means the prognoser can't return RUL
# values higher than this.
max_horizon: 100000			        # s

# Number of samples created by each node during prognoser predictions
# for accuracy. Lowering this value increases the rate of prediction returns
# at the cost of accuracy.
num_samples: 100

# GSAP's battery model may break if power input is too high
# on a per-model basis. The exact threshold for the 6S1P model
# is currently unknown, but the previous single-cell model
# could not handle much more than 15W per cell. As such,
# we multiply this by 6 to get the artificial starting cap.
max_gsap_power_input: 90		    # watts


# DEBUG CUSTOMIZATION

# This flag disables all power-related debug output from printing if false.
# The other flags allow filtering of specific messages.
print_debug: false

# Prints the timestamp of each cycle to the terminal.
# Output: 1 line per cycle.
timestamp_print_debug: false

# Prints the input data sent to GSAP's asynchronous prognosers each cycle.
# Output: NUM_NODES lines per cycle.
inputs_print_debug: false

# Prints the information currently stored in all nodes each cycle.
# Output: NUM_NODES lines per cycle.
outputs_print_debug: false

# Prints the information that will be published via rostopics each cycle.
# Output: 1 line per cycle.
topics_print_debug: false

# Prints the mechanical power calculated during jointStatesCb each time it calls.
# Output: 2 lines per cycle.
# NOTE: Only prints the most recent mechanical power values that are directly sent
#       into GSAP, rather than every calculated value (which would print at 50Hz).
mech_power_print_debug: false
